// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/trading.proto

#include "api/trading.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_api_2ftrading_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Statistics_api_2ftrading_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commands_2fv1_2ftransaction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Transaction_commands_2fv1_2ftransaction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_events_2fv1_2fevents_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<35> scc_info_BusEvent_events_2fv1_2fevents_2eproto;
namespace api {
namespace v1 {
class PropagateChainEventRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PropagateChainEventRequest> _instance;
} _PropagateChainEventRequest_default_instance_;
class PropagateChainEventResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PropagateChainEventResponse> _instance;
} _PropagateChainEventResponse_default_instance_;
class SubmitTransactionV2RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubmitTransactionV2Request> _instance;
} _SubmitTransactionV2Request_default_instance_;
class SubmitTransactionV2ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubmitTransactionV2Response> _instance;
} _SubmitTransactionV2Response_default_instance_;
class GetVegaTimeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVegaTimeRequest> _instance;
} _GetVegaTimeRequest_default_instance_;
class GetVegaTimeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVegaTimeResponse> _instance;
} _GetVegaTimeResponse_default_instance_;
class ObserveEventBusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObserveEventBusRequest> _instance;
} _ObserveEventBusRequest_default_instance_;
class ObserveEventBusResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObserveEventBusResponse> _instance;
} _ObserveEventBusResponse_default_instance_;
class StatisticsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatisticsRequest> _instance;
} _StatisticsRequest_default_instance_;
class StatisticsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatisticsResponse> _instance;
} _StatisticsResponse_default_instance_;
class StatisticsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Statistics> _instance;
} _Statistics_default_instance_;
class LastBlockHeightRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LastBlockHeightRequest> _instance;
} _LastBlockHeightRequest_default_instance_;
class LastBlockHeightResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LastBlockHeightResponse> _instance;
} _LastBlockHeightResponse_default_instance_;
}  // namespace v1
}  // namespace api
static void InitDefaultsscc_info_GetVegaTimeRequest_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_GetVegaTimeRequest_default_instance_;
    new (ptr) ::api::v1::GetVegaTimeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVegaTimeRequest_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetVegaTimeRequest_api_2ftrading_2eproto}, {}};

static void InitDefaultsscc_info_GetVegaTimeResponse_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_GetVegaTimeResponse_default_instance_;
    new (ptr) ::api::v1::GetVegaTimeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVegaTimeResponse_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetVegaTimeResponse_api_2ftrading_2eproto}, {}};

static void InitDefaultsscc_info_LastBlockHeightRequest_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_LastBlockHeightRequest_default_instance_;
    new (ptr) ::api::v1::LastBlockHeightRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LastBlockHeightRequest_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LastBlockHeightRequest_api_2ftrading_2eproto}, {}};

static void InitDefaultsscc_info_LastBlockHeightResponse_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_LastBlockHeightResponse_default_instance_;
    new (ptr) ::api::v1::LastBlockHeightResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LastBlockHeightResponse_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LastBlockHeightResponse_api_2ftrading_2eproto}, {}};

static void InitDefaultsscc_info_ObserveEventBusRequest_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_ObserveEventBusRequest_default_instance_;
    new (ptr) ::api::v1::ObserveEventBusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObserveEventBusRequest_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObserveEventBusRequest_api_2ftrading_2eproto}, {}};

static void InitDefaultsscc_info_ObserveEventBusResponse_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_ObserveEventBusResponse_default_instance_;
    new (ptr) ::api::v1::ObserveEventBusResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObserveEventBusResponse_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObserveEventBusResponse_api_2ftrading_2eproto}, {
      &scc_info_BusEvent_events_2fv1_2fevents_2eproto.base,}};

static void InitDefaultsscc_info_PropagateChainEventRequest_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_PropagateChainEventRequest_default_instance_;
    new (ptr) ::api::v1::PropagateChainEventRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PropagateChainEventRequest_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PropagateChainEventRequest_api_2ftrading_2eproto}, {}};

static void InitDefaultsscc_info_PropagateChainEventResponse_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_PropagateChainEventResponse_default_instance_;
    new (ptr) ::api::v1::PropagateChainEventResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PropagateChainEventResponse_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PropagateChainEventResponse_api_2ftrading_2eproto}, {}};

static void InitDefaultsscc_info_Statistics_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_Statistics_default_instance_;
    new (ptr) ::api::v1::Statistics();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Statistics_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Statistics_api_2ftrading_2eproto}, {}};

static void InitDefaultsscc_info_StatisticsRequest_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_StatisticsRequest_default_instance_;
    new (ptr) ::api::v1::StatisticsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatisticsRequest_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StatisticsRequest_api_2ftrading_2eproto}, {}};

static void InitDefaultsscc_info_StatisticsResponse_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_StatisticsResponse_default_instance_;
    new (ptr) ::api::v1::StatisticsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatisticsResponse_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatisticsResponse_api_2ftrading_2eproto}, {
      &scc_info_Statistics_api_2ftrading_2eproto.base,}};

static void InitDefaultsscc_info_SubmitTransactionV2Request_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_SubmitTransactionV2Request_default_instance_;
    new (ptr) ::api::v1::SubmitTransactionV2Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubmitTransactionV2Request_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SubmitTransactionV2Request_api_2ftrading_2eproto}, {
      &scc_info_Transaction_commands_2fv1_2ftransaction_2eproto.base,}};

static void InitDefaultsscc_info_SubmitTransactionV2Response_api_2ftrading_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::v1::_SubmitTransactionV2Response_default_instance_;
    new (ptr) ::api::v1::SubmitTransactionV2Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubmitTransactionV2Response_api_2ftrading_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubmitTransactionV2Response_api_2ftrading_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_api_2ftrading_2eproto[13];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_api_2ftrading_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_api_2ftrading_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_api_2ftrading_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::PropagateChainEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::PropagateChainEventRequest, event_),
  PROTOBUF_FIELD_OFFSET(::api::v1::PropagateChainEventRequest, pub_key_),
  PROTOBUF_FIELD_OFFSET(::api::v1::PropagateChainEventRequest, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::PropagateChainEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::PropagateChainEventResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::SubmitTransactionV2Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::SubmitTransactionV2Request, tx_),
  PROTOBUF_FIELD_OFFSET(::api::v1::SubmitTransactionV2Request, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::SubmitTransactionV2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::SubmitTransactionV2Response, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::GetVegaTimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::GetVegaTimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::GetVegaTimeResponse, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::ObserveEventBusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::ObserveEventBusRequest, type_),
  PROTOBUF_FIELD_OFFSET(::api::v1::ObserveEventBusRequest, market_id_),
  PROTOBUF_FIELD_OFFSET(::api::v1::ObserveEventBusRequest, party_id_),
  PROTOBUF_FIELD_OFFSET(::api::v1::ObserveEventBusRequest, batch_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::ObserveEventBusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::ObserveEventBusResponse, events_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::StatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::StatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::StatisticsResponse, statistics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, block_height_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, backlog_length_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, total_peers_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, genesis_time_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, current_time_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, vega_time_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, status_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, tx_per_block_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, average_tx_bytes_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, average_orders_per_block_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, trades_per_second_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, orders_per_second_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, total_markets_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, total_amend_order_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, total_cancel_order_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, total_create_order_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, total_orders_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, total_trades_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, order_subscriptions_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, trade_subscriptions_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, candle_subscriptions_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, market_depth_subscriptions_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, positions_subscriptions_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, account_subscriptions_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, market_data_subscriptions_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, app_version_hash_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, app_version_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, chain_version_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, block_duration_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, uptime_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, chain_id_),
  PROTOBUF_FIELD_OFFSET(::api::v1::Statistics, market_depth_updates_subscriptions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::LastBlockHeightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::v1::LastBlockHeightResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::v1::LastBlockHeightResponse, height_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::api::v1::PropagateChainEventRequest)},
  { 8, -1, sizeof(::api::v1::PropagateChainEventResponse)},
  { 14, -1, sizeof(::api::v1::SubmitTransactionV2Request)},
  { 21, -1, sizeof(::api::v1::SubmitTransactionV2Response)},
  { 27, -1, sizeof(::api::v1::GetVegaTimeRequest)},
  { 32, -1, sizeof(::api::v1::GetVegaTimeResponse)},
  { 38, -1, sizeof(::api::v1::ObserveEventBusRequest)},
  { 47, -1, sizeof(::api::v1::ObserveEventBusResponse)},
  { 53, -1, sizeof(::api::v1::StatisticsRequest)},
  { 58, -1, sizeof(::api::v1::StatisticsResponse)},
  { 64, -1, sizeof(::api::v1::Statistics)},
  { 101, -1, sizeof(::api::v1::LastBlockHeightRequest)},
  { 106, -1, sizeof(::api::v1::LastBlockHeightResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_PropagateChainEventRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_PropagateChainEventResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_SubmitTransactionV2Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_SubmitTransactionV2Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_GetVegaTimeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_GetVegaTimeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_ObserveEventBusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_ObserveEventBusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_StatisticsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_StatisticsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_Statistics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_LastBlockHeightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::v1::_LastBlockHeightResponse_default_instance_),
};

const char descriptor_table_protodef_api_2ftrading_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021api/trading.proto\022\006api.v1\032\nvega.proto\032"
  "\rmarkets.proto\032\020governance.proto\032\014assets"
  ".proto\032\026events/v1/events.proto\032\025oracles/"
  "v1/spec.proto\032\025oracles/v1/data.proto\032\032co"
  "mmands/v1/commands.proto\032\035commands/v1/tr"
  "ansaction.proto\032$commands/v1/validator_c"
  "ommands.proto\0326github.com/mwitkow/go-pro"
  "to-validators/validator.proto\"i\n\032Propaga"
  "teChainEventRequest\022\024\n\005event\030\001 \001(\014R\005even"
  "t\022\027\n\007pub_key\030\002 \001(\tR\006pubKey\022\034\n\tsignature\030"
  "\003 \001(\014R\tsignature\"7\n\033PropagateChainEventR"
  "esponse\022\030\n\007success\030\001 \001(\010R\007success\"\326\001\n\032Su"
  "bmitTransactionV2Request\022-\n\002tx\030\001 \001(\0132\035.v"
  "ega.commands.v1.TransactionR\002tx\022;\n\004type\030"
  "\002 \001(\0162\'.api.v1.SubmitTransactionV2Reques"
  "t.TypeR\004type\"L\n\004Type\022\024\n\020TYPE_UNSPECIFIED"
  "\020\000\022\016\n\nTYPE_ASYNC\020\001\022\r\n\tTYPE_SYNC\020\002\022\017\n\013TYP"
  "E_COMMIT\020\003\"7\n\033SubmitTransactionV2Respons"
  "e\022\030\n\007success\030\001 \001(\010R\007success\"\024\n\022GetVegaTi"
  "meRequest\"3\n\023GetVegaTimeResponse\022\034\n\ttime"
  "stamp\030\001 \001(\003R\ttimestamp\"\241\001\n\026ObserveEventB"
  "usRequest\0220\n\004type\030\001 \003(\0162\034.vega.events.v1"
  ".BusEventTypeR\004type\022\033\n\tmarket_id\030\002 \001(\tR\010"
  "marketId\022\031\n\010party_id\030\003 \001(\tR\007partyId\022\035\n\nb"
  "atch_size\030\004 \001(\003R\tbatchSize\"K\n\027ObserveEve"
  "ntBusResponse\0220\n\006events\030\001 \003(\0132\030.vega.eve"
  "nts.v1.BusEventR\006events\"\023\n\021StatisticsReq"
  "uest\"H\n\022StatisticsResponse\0222\n\nstatistics"
  "\030\001 \001(\0132\022.api.v1.StatisticsR\nstatistics\"\351"
  "\n\n\nStatistics\022!\n\014block_height\030\001 \001(\004R\013blo"
  "ckHeight\022%\n\016backlog_length\030\002 \001(\004R\rbacklo"
  "gLength\022\037\n\013total_peers\030\003 \001(\004R\ntotalPeers"
  "\022!\n\014genesis_time\030\004 \001(\tR\013genesisTime\022!\n\014c"
  "urrent_time\030\005 \001(\tR\013currentTime\022\033\n\tvega_t"
  "ime\030\006 \001(\tR\010vegaTime\022)\n\006status\030\007 \001(\0162\021.ve"
  "ga.ChainStatusR\006status\022 \n\014tx_per_block\030\010"
  " \001(\004R\ntxPerBlock\022(\n\020average_tx_bytes\030\t \001"
  "(\004R\016averageTxBytes\0227\n\030average_orders_per"
  "_block\030\n \001(\004R\025averageOrdersPerBlock\022*\n\021t"
  "rades_per_second\030\013 \001(\004R\017tradesPerSecond\022"
  "*\n\021orders_per_second\030\014 \001(\004R\017ordersPerSec"
  "ond\022#\n\rtotal_markets\030\r \001(\004R\014totalMarkets"
  "\022*\n\021total_amend_order\030\020 \001(\004R\017totalAmendO"
  "rder\022,\n\022total_cancel_order\030\021 \001(\004R\020totalC"
  "ancelOrder\022,\n\022total_create_order\030\022 \001(\004R\020"
  "totalCreateOrder\022!\n\014total_orders\030\023 \001(\004R\013"
  "totalOrders\022!\n\014total_trades\030\024 \001(\004R\013total"
  "Trades\022/\n\023order_subscriptions\030\025 \001(\rR\022ord"
  "erSubscriptions\022/\n\023trade_subscriptions\030\026"
  " \001(\rR\022tradeSubscriptions\0221\n\024candle_subsc"
  "riptions\030\027 \001(\rR\023candleSubscriptions\022<\n\032m"
  "arket_depth_subscriptions\030\030 \001(\rR\030marketD"
  "epthSubscriptions\0227\n\027positions_subscript"
  "ions\030\031 \001(\rR\026positionsSubscriptions\0223\n\025ac"
  "count_subscriptions\030\032 \001(\rR\024accountSubscr"
  "iptions\022:\n\031market_data_subscriptions\030\033 \001"
  "(\rR\027marketDataSubscriptions\022(\n\020app_versi"
  "on_hash\030\034 \001(\tR\016appVersionHash\022\037\n\013app_ver"
  "sion\030\035 \001(\tR\nappVersion\022#\n\rchain_version\030"
  "\036 \001(\tR\014chainVersion\022%\n\016block_duration\030\037 "
  "\001(\004R\rblockDuration\022\026\n\006uptime\030  \001(\tR\006upti"
  "me\022\031\n\010chain_id\030! \001(\tR\007chainId\022K\n\"market_"
  "depth_updates_subscriptions\030\" \001(\rR\037marke"
  "tDepthUpdatesSubscriptions\"\030\n\026LastBlockH"
  "eightRequest\"1\n\027LastBlockHeightResponse\022"
  "\026\n\006height\030\001 \001(\004R\006height2\211\004\n\016TradingServi"
  "ce\022^\n\023SubmitTransactionV2\022\".api.v1.Submi"
  "tTransactionV2Request\032#.api.v1.SubmitTra"
  "nsactionV2Response\022^\n\023PropagateChainEven"
  "t\022\".api.v1.PropagateChainEventRequest\032#."
  "api.v1.PropagateChainEventResponse\022C\n\nSt"
  "atistics\022\031.api.v1.StatisticsRequest\032\032.ap"
  "i.v1.StatisticsResponse\022R\n\017LastBlockHeig"
  "ht\022\036.api.v1.LastBlockHeightRequest\032\037.api"
  ".v1.LastBlockHeightResponse\022F\n\013GetVegaTi"
  "me\022\032.api.v1.GetVegaTimeRequest\032\033.api.v1."
  "GetVegaTimeResponse\022V\n\017ObserveEventBus\022\036"
  ".api.v1.ObserveEventBusRequest\032\037.api.v1."
  "ObserveEventBusResponse(\0010\001B\?\n\030io.vegapr"
  "otocol.vega.apiZ#code.vegaprotocol.io/ve"
  "ga/proto/apib\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_api_2ftrading_2eproto_deps[11] = {
  &::descriptor_table_assets_2eproto,
  &::descriptor_table_commands_2fv1_2fcommands_2eproto,
  &::descriptor_table_commands_2fv1_2ftransaction_2eproto,
  &::descriptor_table_commands_2fv1_2fvalidator_5fcommands_2eproto,
  &::descriptor_table_events_2fv1_2fevents_2eproto,
  &::descriptor_table_github_2ecom_2fmwitkow_2fgo_2dproto_2dvalidators_2fvalidator_2eproto,
  &::descriptor_table_governance_2eproto,
  &::descriptor_table_markets_2eproto,
  &::descriptor_table_oracles_2fv1_2fdata_2eproto,
  &::descriptor_table_oracles_2fv1_2fspec_2eproto,
  &::descriptor_table_vega_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_api_2ftrading_2eproto_sccs[13] = {
  &scc_info_GetVegaTimeRequest_api_2ftrading_2eproto.base,
  &scc_info_GetVegaTimeResponse_api_2ftrading_2eproto.base,
  &scc_info_LastBlockHeightRequest_api_2ftrading_2eproto.base,
  &scc_info_LastBlockHeightResponse_api_2ftrading_2eproto.base,
  &scc_info_ObserveEventBusRequest_api_2ftrading_2eproto.base,
  &scc_info_ObserveEventBusResponse_api_2ftrading_2eproto.base,
  &scc_info_PropagateChainEventRequest_api_2ftrading_2eproto.base,
  &scc_info_PropagateChainEventResponse_api_2ftrading_2eproto.base,
  &scc_info_Statistics_api_2ftrading_2eproto.base,
  &scc_info_StatisticsRequest_api_2ftrading_2eproto.base,
  &scc_info_StatisticsResponse_api_2ftrading_2eproto.base,
  &scc_info_SubmitTransactionV2Request_api_2ftrading_2eproto.base,
  &scc_info_SubmitTransactionV2Response_api_2ftrading_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_api_2ftrading_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_api_2ftrading_2eproto = {
  false, false, descriptor_table_protodef_api_2ftrading_2eproto, "api/trading.proto", 3220,
  &descriptor_table_api_2ftrading_2eproto_once, descriptor_table_api_2ftrading_2eproto_sccs, descriptor_table_api_2ftrading_2eproto_deps, 13, 11,
  schemas, file_default_instances, TableStruct_api_2ftrading_2eproto::offsets,
  file_level_metadata_api_2ftrading_2eproto, 13, file_level_enum_descriptors_api_2ftrading_2eproto, file_level_service_descriptors_api_2ftrading_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_api_2ftrading_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_api_2ftrading_2eproto)), true);
namespace api {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SubmitTransactionV2Request_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_api_2ftrading_2eproto);
  return file_level_enum_descriptors_api_2ftrading_2eproto[0];
}
bool SubmitTransactionV2Request_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SubmitTransactionV2Request_Type SubmitTransactionV2Request::TYPE_UNSPECIFIED;
constexpr SubmitTransactionV2Request_Type SubmitTransactionV2Request::TYPE_ASYNC;
constexpr SubmitTransactionV2Request_Type SubmitTransactionV2Request::TYPE_SYNC;
constexpr SubmitTransactionV2Request_Type SubmitTransactionV2Request::TYPE_COMMIT;
constexpr SubmitTransactionV2Request_Type SubmitTransactionV2Request::Type_MIN;
constexpr SubmitTransactionV2Request_Type SubmitTransactionV2Request::Type_MAX;
constexpr int SubmitTransactionV2Request::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class PropagateChainEventRequest::_Internal {
 public:
};

PropagateChainEventRequest::PropagateChainEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.PropagateChainEventRequest)
}
PropagateChainEventRequest::PropagateChainEventRequest(const PropagateChainEventRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  event_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_event().empty()) {
    event_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_event(),
      GetArena());
  }
  pub_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pub_key().empty()) {
    pub_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pub_key(),
      GetArena());
  }
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_signature().empty()) {
    signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signature(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:api.v1.PropagateChainEventRequest)
}

void PropagateChainEventRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PropagateChainEventRequest_api_2ftrading_2eproto.base);
  event_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pub_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PropagateChainEventRequest::~PropagateChainEventRequest() {
  // @@protoc_insertion_point(destructor:api.v1.PropagateChainEventRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PropagateChainEventRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  event_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pub_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PropagateChainEventRequest::ArenaDtor(void* object) {
  PropagateChainEventRequest* _this = reinterpret_cast< PropagateChainEventRequest* >(object);
  (void)_this;
}
void PropagateChainEventRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PropagateChainEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PropagateChainEventRequest& PropagateChainEventRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PropagateChainEventRequest_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void PropagateChainEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.PropagateChainEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_.ClearToEmpty();
  pub_key_.ClearToEmpty();
  signature_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropagateChainEventRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes event = 1 [json_name = "event"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_event();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pub_key = 2 [json_name = "pubKey"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pub_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.PropagateChainEventRequest.pub_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes signature = 3 [json_name = "signature"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PropagateChainEventRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.PropagateChainEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes event = 1 [json_name = "event"];
  if (this->event().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_event(), target);
  }

  // string pub_key = 2 [json_name = "pubKey"];
  if (this->pub_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pub_key().data(), static_cast<int>(this->_internal_pub_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.PropagateChainEventRequest.pub_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pub_key(), target);
  }

  // bytes signature = 3 [json_name = "signature"];
  if (this->signature().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_signature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.PropagateChainEventRequest)
  return target;
}

size_t PropagateChainEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.PropagateChainEventRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes event = 1 [json_name = "event"];
  if (this->event().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_event());
  }

  // string pub_key = 2 [json_name = "pubKey"];
  if (this->pub_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pub_key());
  }

  // bytes signature = 3 [json_name = "signature"];
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signature());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PropagateChainEventRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.PropagateChainEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PropagateChainEventRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PropagateChainEventRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.PropagateChainEventRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.PropagateChainEventRequest)
    MergeFrom(*source);
  }
}

void PropagateChainEventRequest::MergeFrom(const PropagateChainEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.PropagateChainEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event().size() > 0) {
    _internal_set_event(from._internal_event());
  }
  if (from.pub_key().size() > 0) {
    _internal_set_pub_key(from._internal_pub_key());
  }
  if (from.signature().size() > 0) {
    _internal_set_signature(from._internal_signature());
  }
}

void PropagateChainEventRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.PropagateChainEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropagateChainEventRequest::CopyFrom(const PropagateChainEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.PropagateChainEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropagateChainEventRequest::IsInitialized() const {
  return true;
}

void PropagateChainEventRequest::InternalSwap(PropagateChainEventRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  event_.Swap(&other->event_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pub_key_.Swap(&other->pub_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  signature_.Swap(&other->signature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PropagateChainEventRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PropagateChainEventResponse::_Internal {
 public:
};

PropagateChainEventResponse::PropagateChainEventResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.PropagateChainEventResponse)
}
PropagateChainEventResponse::PropagateChainEventResponse(const PropagateChainEventResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:api.v1.PropagateChainEventResponse)
}

void PropagateChainEventResponse::SharedCtor() {
  success_ = false;
}

PropagateChainEventResponse::~PropagateChainEventResponse() {
  // @@protoc_insertion_point(destructor:api.v1.PropagateChainEventResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PropagateChainEventResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PropagateChainEventResponse::ArenaDtor(void* object) {
  PropagateChainEventResponse* _this = reinterpret_cast< PropagateChainEventResponse* >(object);
  (void)_this;
}
void PropagateChainEventResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PropagateChainEventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PropagateChainEventResponse& PropagateChainEventResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PropagateChainEventResponse_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void PropagateChainEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.PropagateChainEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropagateChainEventResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1 [json_name = "success"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PropagateChainEventResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.PropagateChainEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.PropagateChainEventResponse)
  return target;
}

size_t PropagateChainEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.PropagateChainEventResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PropagateChainEventResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.PropagateChainEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PropagateChainEventResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PropagateChainEventResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.PropagateChainEventResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.PropagateChainEventResponse)
    MergeFrom(*source);
  }
}

void PropagateChainEventResponse::MergeFrom(const PropagateChainEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.PropagateChainEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void PropagateChainEventResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.PropagateChainEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropagateChainEventResponse::CopyFrom(const PropagateChainEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.PropagateChainEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropagateChainEventResponse::IsInitialized() const {
  return true;
}

void PropagateChainEventResponse::InternalSwap(PropagateChainEventResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PropagateChainEventResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SubmitTransactionV2Request::_Internal {
 public:
  static const ::vega::commands::v1::Transaction& tx(const SubmitTransactionV2Request* msg);
};

const ::vega::commands::v1::Transaction&
SubmitTransactionV2Request::_Internal::tx(const SubmitTransactionV2Request* msg) {
  return *msg->tx_;
}
void SubmitTransactionV2Request::clear_tx() {
  if (GetArena() == nullptr && tx_ != nullptr) {
    delete tx_;
  }
  tx_ = nullptr;
}
SubmitTransactionV2Request::SubmitTransactionV2Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.SubmitTransactionV2Request)
}
SubmitTransactionV2Request::SubmitTransactionV2Request(const SubmitTransactionV2Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tx()) {
    tx_ = new ::vega::commands::v1::Transaction(*from.tx_);
  } else {
    tx_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:api.v1.SubmitTransactionV2Request)
}

void SubmitTransactionV2Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubmitTransactionV2Request_api_2ftrading_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&tx_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&tx_)) + sizeof(type_));
}

SubmitTransactionV2Request::~SubmitTransactionV2Request() {
  // @@protoc_insertion_point(destructor:api.v1.SubmitTransactionV2Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubmitTransactionV2Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete tx_;
}

void SubmitTransactionV2Request::ArenaDtor(void* object) {
  SubmitTransactionV2Request* _this = reinterpret_cast< SubmitTransactionV2Request* >(object);
  (void)_this;
}
void SubmitTransactionV2Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubmitTransactionV2Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubmitTransactionV2Request& SubmitTransactionV2Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubmitTransactionV2Request_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void SubmitTransactionV2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.SubmitTransactionV2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && tx_ != nullptr) {
    delete tx_;
  }
  tx_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitTransactionV2Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .vega.commands.v1.Transaction tx = 1 [json_name = "tx"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tx(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .api.v1.SubmitTransactionV2Request.Type type = 2 [json_name = "type"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::api::v1::SubmitTransactionV2Request_Type>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubmitTransactionV2Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.SubmitTransactionV2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.commands.v1.Transaction tx = 1 [json_name = "tx"];
  if (this->has_tx()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tx(this), target, stream);
  }

  // .api.v1.SubmitTransactionV2Request.Type type = 2 [json_name = "type"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.SubmitTransactionV2Request)
  return target;
}

size_t SubmitTransactionV2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.SubmitTransactionV2Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vega.commands.v1.Transaction tx = 1 [json_name = "tx"];
  if (this->has_tx()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tx_);
  }

  // .api.v1.SubmitTransactionV2Request.Type type = 2 [json_name = "type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubmitTransactionV2Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.SubmitTransactionV2Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitTransactionV2Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubmitTransactionV2Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.SubmitTransactionV2Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.SubmitTransactionV2Request)
    MergeFrom(*source);
  }
}

void SubmitTransactionV2Request::MergeFrom(const SubmitTransactionV2Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.SubmitTransactionV2Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tx()) {
    _internal_mutable_tx()->::vega::commands::v1::Transaction::MergeFrom(from._internal_tx());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void SubmitTransactionV2Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.SubmitTransactionV2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitTransactionV2Request::CopyFrom(const SubmitTransactionV2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.SubmitTransactionV2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitTransactionV2Request::IsInitialized() const {
  return true;
}

void SubmitTransactionV2Request::InternalSwap(SubmitTransactionV2Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitTransactionV2Request, type_)
      + sizeof(SubmitTransactionV2Request::type_)
      - PROTOBUF_FIELD_OFFSET(SubmitTransactionV2Request, tx_)>(
          reinterpret_cast<char*>(&tx_),
          reinterpret_cast<char*>(&other->tx_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitTransactionV2Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SubmitTransactionV2Response::_Internal {
 public:
};

SubmitTransactionV2Response::SubmitTransactionV2Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.SubmitTransactionV2Response)
}
SubmitTransactionV2Response::SubmitTransactionV2Response(const SubmitTransactionV2Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:api.v1.SubmitTransactionV2Response)
}

void SubmitTransactionV2Response::SharedCtor() {
  success_ = false;
}

SubmitTransactionV2Response::~SubmitTransactionV2Response() {
  // @@protoc_insertion_point(destructor:api.v1.SubmitTransactionV2Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubmitTransactionV2Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SubmitTransactionV2Response::ArenaDtor(void* object) {
  SubmitTransactionV2Response* _this = reinterpret_cast< SubmitTransactionV2Response* >(object);
  (void)_this;
}
void SubmitTransactionV2Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubmitTransactionV2Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubmitTransactionV2Response& SubmitTransactionV2Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubmitTransactionV2Response_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void SubmitTransactionV2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.SubmitTransactionV2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitTransactionV2Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1 [json_name = "success"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubmitTransactionV2Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.SubmitTransactionV2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.SubmitTransactionV2Response)
  return target;
}

size_t SubmitTransactionV2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.SubmitTransactionV2Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubmitTransactionV2Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.SubmitTransactionV2Response)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitTransactionV2Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubmitTransactionV2Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.SubmitTransactionV2Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.SubmitTransactionV2Response)
    MergeFrom(*source);
  }
}

void SubmitTransactionV2Response::MergeFrom(const SubmitTransactionV2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.SubmitTransactionV2Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void SubmitTransactionV2Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.SubmitTransactionV2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitTransactionV2Response::CopyFrom(const SubmitTransactionV2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.SubmitTransactionV2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitTransactionV2Response::IsInitialized() const {
  return true;
}

void SubmitTransactionV2Response::InternalSwap(SubmitTransactionV2Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitTransactionV2Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetVegaTimeRequest::_Internal {
 public:
};

GetVegaTimeRequest::GetVegaTimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.GetVegaTimeRequest)
}
GetVegaTimeRequest::GetVegaTimeRequest(const GetVegaTimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.v1.GetVegaTimeRequest)
}

void GetVegaTimeRequest::SharedCtor() {
}

GetVegaTimeRequest::~GetVegaTimeRequest() {
  // @@protoc_insertion_point(destructor:api.v1.GetVegaTimeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetVegaTimeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetVegaTimeRequest::ArenaDtor(void* object) {
  GetVegaTimeRequest* _this = reinterpret_cast< GetVegaTimeRequest* >(object);
  (void)_this;
}
void GetVegaTimeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVegaTimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVegaTimeRequest& GetVegaTimeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetVegaTimeRequest_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void GetVegaTimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.GetVegaTimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVegaTimeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetVegaTimeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.GetVegaTimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.GetVegaTimeRequest)
  return target;
}

size_t GetVegaTimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.GetVegaTimeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVegaTimeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.GetVegaTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVegaTimeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetVegaTimeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.GetVegaTimeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.GetVegaTimeRequest)
    MergeFrom(*source);
  }
}

void GetVegaTimeRequest::MergeFrom(const GetVegaTimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.GetVegaTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetVegaTimeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.GetVegaTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVegaTimeRequest::CopyFrom(const GetVegaTimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.GetVegaTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVegaTimeRequest::IsInitialized() const {
  return true;
}

void GetVegaTimeRequest::InternalSwap(GetVegaTimeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVegaTimeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetVegaTimeResponse::_Internal {
 public:
};

GetVegaTimeResponse::GetVegaTimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.GetVegaTimeResponse)
}
GetVegaTimeResponse::GetVegaTimeResponse(const GetVegaTimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:api.v1.GetVegaTimeResponse)
}

void GetVegaTimeResponse::SharedCtor() {
  timestamp_ = PROTOBUF_LONGLONG(0);
}

GetVegaTimeResponse::~GetVegaTimeResponse() {
  // @@protoc_insertion_point(destructor:api.v1.GetVegaTimeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetVegaTimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetVegaTimeResponse::ArenaDtor(void* object) {
  GetVegaTimeResponse* _this = reinterpret_cast< GetVegaTimeResponse* >(object);
  (void)_this;
}
void GetVegaTimeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVegaTimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVegaTimeResponse& GetVegaTimeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetVegaTimeResponse_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void GetVegaTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.GetVegaTimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVegaTimeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 timestamp = 1 [json_name = "timestamp"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetVegaTimeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.GetVegaTimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1 [json_name = "timestamp"];
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.GetVegaTimeResponse)
  return target;
}

size_t GetVegaTimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.GetVegaTimeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 timestamp = 1 [json_name = "timestamp"];
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVegaTimeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.GetVegaTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVegaTimeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetVegaTimeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.GetVegaTimeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.GetVegaTimeResponse)
    MergeFrom(*source);
  }
}

void GetVegaTimeResponse::MergeFrom(const GetVegaTimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.GetVegaTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void GetVegaTimeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.GetVegaTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVegaTimeResponse::CopyFrom(const GetVegaTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.GetVegaTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVegaTimeResponse::IsInitialized() const {
  return true;
}

void GetVegaTimeResponse::InternalSwap(GetVegaTimeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVegaTimeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObserveEventBusRequest::_Internal {
 public:
};

ObserveEventBusRequest::ObserveEventBusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  type_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.ObserveEventBusRequest)
}
ObserveEventBusRequest::ObserveEventBusRequest(const ObserveEventBusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      type_(from.type_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  market_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_market_id().empty()) {
    market_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_market_id(),
      GetArena());
  }
  party_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_party_id().empty()) {
    party_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_party_id(),
      GetArena());
  }
  batch_size_ = from.batch_size_;
  // @@protoc_insertion_point(copy_constructor:api.v1.ObserveEventBusRequest)
}

void ObserveEventBusRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObserveEventBusRequest_api_2ftrading_2eproto.base);
  market_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  party_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  batch_size_ = PROTOBUF_LONGLONG(0);
}

ObserveEventBusRequest::~ObserveEventBusRequest() {
  // @@protoc_insertion_point(destructor:api.v1.ObserveEventBusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObserveEventBusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  market_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  party_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObserveEventBusRequest::ArenaDtor(void* object) {
  ObserveEventBusRequest* _this = reinterpret_cast< ObserveEventBusRequest* >(object);
  (void)_this;
}
void ObserveEventBusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObserveEventBusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObserveEventBusRequest& ObserveEventBusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObserveEventBusRequest_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void ObserveEventBusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.ObserveEventBusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.Clear();
  market_id_.ClearToEmpty();
  party_id_.ClearToEmpty();
  batch_size_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObserveEventBusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .vega.events.v1.BusEventType type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_type(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_type(static_cast<::vega::events::v1::BusEventType>(val));
        } else goto handle_unusual;
        continue;
      // string market_id = 2 [json_name = "marketId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_market_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.ObserveEventBusRequest.market_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string party_id = 3 [json_name = "partyId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_party_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.ObserveEventBusRequest.party_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 batch_size = 4 [json_name = "batchSize"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          batch_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObserveEventBusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.ObserveEventBusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vega.events.v1.BusEventType type = 1 [json_name = "type"];
  {
    int byte_size = _type_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, type_, byte_size, target);
    }
  }

  // string market_id = 2 [json_name = "marketId"];
  if (this->market_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_market_id().data(), static_cast<int>(this->_internal_market_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.ObserveEventBusRequest.market_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_market_id(), target);
  }

  // string party_id = 3 [json_name = "partyId"];
  if (this->party_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_party_id().data(), static_cast<int>(this->_internal_party_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.ObserveEventBusRequest.party_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_party_id(), target);
  }

  // int64 batch_size = 4 [json_name = "batchSize"];
  if (this->batch_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_batch_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.ObserveEventBusRequest)
  return target;
}

size_t ObserveEventBusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.ObserveEventBusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.events.v1.BusEventType type = 1 [json_name = "type"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_type_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_type(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _type_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string market_id = 2 [json_name = "marketId"];
  if (this->market_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_market_id());
  }

  // string party_id = 3 [json_name = "partyId"];
  if (this->party_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_party_id());
  }

  // int64 batch_size = 4 [json_name = "batchSize"];
  if (this->batch_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_batch_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObserveEventBusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.ObserveEventBusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ObserveEventBusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObserveEventBusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.ObserveEventBusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.ObserveEventBusRequest)
    MergeFrom(*source);
  }
}

void ObserveEventBusRequest::MergeFrom(const ObserveEventBusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.ObserveEventBusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_.MergeFrom(from.type_);
  if (from.market_id().size() > 0) {
    _internal_set_market_id(from._internal_market_id());
  }
  if (from.party_id().size() > 0) {
    _internal_set_party_id(from._internal_party_id());
  }
  if (from.batch_size() != 0) {
    _internal_set_batch_size(from._internal_batch_size());
  }
}

void ObserveEventBusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.ObserveEventBusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObserveEventBusRequest::CopyFrom(const ObserveEventBusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.ObserveEventBusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObserveEventBusRequest::IsInitialized() const {
  return true;
}

void ObserveEventBusRequest::InternalSwap(ObserveEventBusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  type_.InternalSwap(&other->type_);
  market_id_.Swap(&other->market_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  party_id_.Swap(&other->party_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(batch_size_, other->batch_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObserveEventBusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObserveEventBusResponse::_Internal {
 public:
};

void ObserveEventBusResponse::clear_events() {
  events_.Clear();
}
ObserveEventBusResponse::ObserveEventBusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  events_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.ObserveEventBusResponse)
}
ObserveEventBusResponse::ObserveEventBusResponse(const ObserveEventBusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      events_(from.events_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.v1.ObserveEventBusResponse)
}

void ObserveEventBusResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObserveEventBusResponse_api_2ftrading_2eproto.base);
}

ObserveEventBusResponse::~ObserveEventBusResponse() {
  // @@protoc_insertion_point(destructor:api.v1.ObserveEventBusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObserveEventBusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObserveEventBusResponse::ArenaDtor(void* object) {
  ObserveEventBusResponse* _this = reinterpret_cast< ObserveEventBusResponse* >(object);
  (void)_this;
}
void ObserveEventBusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObserveEventBusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObserveEventBusResponse& ObserveEventBusResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObserveEventBusResponse_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void ObserveEventBusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.ObserveEventBusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObserveEventBusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .vega.events.v1.BusEvent events = 1 [json_name = "events"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObserveEventBusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.ObserveEventBusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vega.events.v1.BusEvent events = 1 [json_name = "events"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_events_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_events(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.ObserveEventBusResponse)
  return target;
}

size_t ObserveEventBusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.ObserveEventBusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.events.v1.BusEvent events = 1 [json_name = "events"];
  total_size += 1UL * this->_internal_events_size();
  for (const auto& msg : this->events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObserveEventBusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.ObserveEventBusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ObserveEventBusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObserveEventBusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.ObserveEventBusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.ObserveEventBusResponse)
    MergeFrom(*source);
  }
}

void ObserveEventBusResponse::MergeFrom(const ObserveEventBusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.ObserveEventBusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
}

void ObserveEventBusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.ObserveEventBusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObserveEventBusResponse::CopyFrom(const ObserveEventBusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.ObserveEventBusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObserveEventBusResponse::IsInitialized() const {
  return true;
}

void ObserveEventBusResponse::InternalSwap(ObserveEventBusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  events_.InternalSwap(&other->events_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObserveEventBusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StatisticsRequest::_Internal {
 public:
};

StatisticsRequest::StatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.StatisticsRequest)
}
StatisticsRequest::StatisticsRequest(const StatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.v1.StatisticsRequest)
}

void StatisticsRequest::SharedCtor() {
}

StatisticsRequest::~StatisticsRequest() {
  // @@protoc_insertion_point(destructor:api.v1.StatisticsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StatisticsRequest::ArenaDtor(void* object) {
  StatisticsRequest* _this = reinterpret_cast< StatisticsRequest* >(object);
  (void)_this;
}
void StatisticsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatisticsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatisticsRequest& StatisticsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatisticsRequest_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void StatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.StatisticsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatisticsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatisticsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.StatisticsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.StatisticsRequest)
  return target;
}

size_t StatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.StatisticsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.StatisticsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StatisticsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatisticsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.StatisticsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.StatisticsRequest)
    MergeFrom(*source);
  }
}

void StatisticsRequest::MergeFrom(const StatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.StatisticsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StatisticsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.StatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticsRequest::CopyFrom(const StatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.StatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticsRequest::IsInitialized() const {
  return true;
}

void StatisticsRequest::InternalSwap(StatisticsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatisticsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StatisticsResponse::_Internal {
 public:
  static const ::api::v1::Statistics& statistics(const StatisticsResponse* msg);
};

const ::api::v1::Statistics&
StatisticsResponse::_Internal::statistics(const StatisticsResponse* msg) {
  return *msg->statistics_;
}
StatisticsResponse::StatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.StatisticsResponse)
}
StatisticsResponse::StatisticsResponse(const StatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_statistics()) {
    statistics_ = new ::api::v1::Statistics(*from.statistics_);
  } else {
    statistics_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:api.v1.StatisticsResponse)
}

void StatisticsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatisticsResponse_api_2ftrading_2eproto.base);
  statistics_ = nullptr;
}

StatisticsResponse::~StatisticsResponse() {
  // @@protoc_insertion_point(destructor:api.v1.StatisticsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete statistics_;
}

void StatisticsResponse::ArenaDtor(void* object) {
  StatisticsResponse* _this = reinterpret_cast< StatisticsResponse* >(object);
  (void)_this;
}
void StatisticsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatisticsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatisticsResponse& StatisticsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatisticsResponse_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void StatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.StatisticsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && statistics_ != nullptr) {
    delete statistics_;
  }
  statistics_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatisticsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .api.v1.Statistics statistics = 1 [json_name = "statistics"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_statistics(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatisticsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.StatisticsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.v1.Statistics statistics = 1 [json_name = "statistics"];
  if (this->has_statistics()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::statistics(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.StatisticsResponse)
  return target;
}

size_t StatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.StatisticsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .api.v1.Statistics statistics = 1 [json_name = "statistics"];
  if (this->has_statistics()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *statistics_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.StatisticsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StatisticsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatisticsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.StatisticsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.StatisticsResponse)
    MergeFrom(*source);
  }
}

void StatisticsResponse::MergeFrom(const StatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.StatisticsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_statistics()) {
    _internal_mutable_statistics()->::api::v1::Statistics::MergeFrom(from._internal_statistics());
  }
}

void StatisticsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.StatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticsResponse::CopyFrom(const StatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.StatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticsResponse::IsInitialized() const {
  return true;
}

void StatisticsResponse::InternalSwap(StatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(statistics_, other->statistics_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatisticsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Statistics::_Internal {
 public:
};

Statistics::Statistics(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.Statistics)
}
Statistics::Statistics(const Statistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  genesis_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_genesis_time().empty()) {
    genesis_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_genesis_time(),
      GetArena());
  }
  current_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_current_time().empty()) {
    current_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_current_time(),
      GetArena());
  }
  vega_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vega_time().empty()) {
    vega_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vega_time(),
      GetArena());
  }
  app_version_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_app_version_hash().empty()) {
    app_version_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_version_hash(),
      GetArena());
  }
  app_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_app_version().empty()) {
    app_version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_version(),
      GetArena());
  }
  chain_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chain_version().empty()) {
    chain_version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_chain_version(),
      GetArena());
  }
  uptime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uptime().empty()) {
    uptime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uptime(),
      GetArena());
  }
  chain_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chain_id().empty()) {
    chain_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_chain_id(),
      GetArena());
  }
  ::memcpy(&block_height_, &from.block_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&market_depth_updates_subscriptions_) -
    reinterpret_cast<char*>(&block_height_)) + sizeof(market_depth_updates_subscriptions_));
  // @@protoc_insertion_point(copy_constructor:api.v1.Statistics)
}

void Statistics::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Statistics_api_2ftrading_2eproto.base);
  genesis_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  current_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vega_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_version_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chain_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uptime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chain_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&block_height_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&market_depth_updates_subscriptions_) -
      reinterpret_cast<char*>(&block_height_)) + sizeof(market_depth_updates_subscriptions_));
}

Statistics::~Statistics() {
  // @@protoc_insertion_point(destructor:api.v1.Statistics)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Statistics::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  genesis_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  current_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vega_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_version_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chain_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uptime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chain_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Statistics::ArenaDtor(void* object) {
  Statistics* _this = reinterpret_cast< Statistics* >(object);
  (void)_this;
}
void Statistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Statistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Statistics& Statistics::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Statistics_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void Statistics::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.Statistics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  genesis_time_.ClearToEmpty();
  current_time_.ClearToEmpty();
  vega_time_.ClearToEmpty();
  app_version_hash_.ClearToEmpty();
  app_version_.ClearToEmpty();
  chain_version_.ClearToEmpty();
  uptime_.ClearToEmpty();
  chain_id_.ClearToEmpty();
  ::memset(&block_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&market_depth_updates_subscriptions_) -
      reinterpret_cast<char*>(&block_height_)) + sizeof(market_depth_updates_subscriptions_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Statistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 block_height = 1 [json_name = "blockHeight"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 backlog_length = 2 [json_name = "backlogLength"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          backlog_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 total_peers = 3 [json_name = "totalPeers"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          total_peers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string genesis_time = 4 [json_name = "genesisTime"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_genesis_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.Statistics.genesis_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string current_time = 5 [json_name = "currentTime"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_current_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.Statistics.current_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vega_time = 6 [json_name = "vegaTime"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_vega_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.Statistics.vega_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vega.ChainStatus status = 7 [json_name = "status"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::vega::ChainStatus>(val));
        } else goto handle_unusual;
        continue;
      // uint64 tx_per_block = 8 [json_name = "txPerBlock"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          tx_per_block_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 average_tx_bytes = 9 [json_name = "averageTxBytes"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          average_tx_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 average_orders_per_block = 10 [json_name = "averageOrdersPerBlock"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          average_orders_per_block_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 trades_per_second = 11 [json_name = "tradesPerSecond"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          trades_per_second_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 orders_per_second = 12 [json_name = "ordersPerSecond"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          orders_per_second_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 total_markets = 13 [json_name = "totalMarkets"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          total_markets_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 total_amend_order = 16 [json_name = "totalAmendOrder"];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          total_amend_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 total_cancel_order = 17 [json_name = "totalCancelOrder"];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          total_cancel_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 total_create_order = 18 [json_name = "totalCreateOrder"];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          total_create_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 total_orders = 19 [json_name = "totalOrders"];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          total_orders_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 total_trades = 20 [json_name = "totalTrades"];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          total_trades_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 order_subscriptions = 21 [json_name = "orderSubscriptions"];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          order_subscriptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 trade_subscriptions = 22 [json_name = "tradeSubscriptions"];
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          trade_subscriptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 candle_subscriptions = 23 [json_name = "candleSubscriptions"];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          candle_subscriptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 market_depth_subscriptions = 24 [json_name = "marketDepthSubscriptions"];
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          market_depth_subscriptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 positions_subscriptions = 25 [json_name = "positionsSubscriptions"];
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          positions_subscriptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 account_subscriptions = 26 [json_name = "accountSubscriptions"];
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          account_subscriptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 market_data_subscriptions = 27 [json_name = "marketDataSubscriptions"];
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          market_data_subscriptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string app_version_hash = 28 [json_name = "appVersionHash"];
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          auto str = _internal_mutable_app_version_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.Statistics.app_version_hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string app_version = 29 [json_name = "appVersion"];
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          auto str = _internal_mutable_app_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.Statistics.app_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string chain_version = 30 [json_name = "chainVersion"];
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_chain_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.Statistics.chain_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 block_duration = 31 [json_name = "blockDuration"];
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          block_duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uptime = 32 [json_name = "uptime"];
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          auto str = _internal_mutable_uptime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.Statistics.uptime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string chain_id = 33 [json_name = "chainId"];
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_chain_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.v1.Statistics.chain_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 market_depth_updates_subscriptions = 34 [json_name = "marketDepthUpdatesSubscriptions"];
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          market_depth_updates_subscriptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Statistics::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.Statistics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 block_height = 1 [json_name = "blockHeight"];
  if (this->block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_block_height(), target);
  }

  // uint64 backlog_length = 2 [json_name = "backlogLength"];
  if (this->backlog_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_backlog_length(), target);
  }

  // uint64 total_peers = 3 [json_name = "totalPeers"];
  if (this->total_peers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_total_peers(), target);
  }

  // string genesis_time = 4 [json_name = "genesisTime"];
  if (this->genesis_time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_genesis_time().data(), static_cast<int>(this->_internal_genesis_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.Statistics.genesis_time");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_genesis_time(), target);
  }

  // string current_time = 5 [json_name = "currentTime"];
  if (this->current_time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_current_time().data(), static_cast<int>(this->_internal_current_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.Statistics.current_time");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_current_time(), target);
  }

  // string vega_time = 6 [json_name = "vegaTime"];
  if (this->vega_time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vega_time().data(), static_cast<int>(this->_internal_vega_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.Statistics.vega_time");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_vega_time(), target);
  }

  // .vega.ChainStatus status = 7 [json_name = "status"];
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_status(), target);
  }

  // uint64 tx_per_block = 8 [json_name = "txPerBlock"];
  if (this->tx_per_block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_tx_per_block(), target);
  }

  // uint64 average_tx_bytes = 9 [json_name = "averageTxBytes"];
  if (this->average_tx_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(9, this->_internal_average_tx_bytes(), target);
  }

  // uint64 average_orders_per_block = 10 [json_name = "averageOrdersPerBlock"];
  if (this->average_orders_per_block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(10, this->_internal_average_orders_per_block(), target);
  }

  // uint64 trades_per_second = 11 [json_name = "tradesPerSecond"];
  if (this->trades_per_second() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_trades_per_second(), target);
  }

  // uint64 orders_per_second = 12 [json_name = "ordersPerSecond"];
  if (this->orders_per_second() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(12, this->_internal_orders_per_second(), target);
  }

  // uint64 total_markets = 13 [json_name = "totalMarkets"];
  if (this->total_markets() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(13, this->_internal_total_markets(), target);
  }

  // uint64 total_amend_order = 16 [json_name = "totalAmendOrder"];
  if (this->total_amend_order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(16, this->_internal_total_amend_order(), target);
  }

  // uint64 total_cancel_order = 17 [json_name = "totalCancelOrder"];
  if (this->total_cancel_order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(17, this->_internal_total_cancel_order(), target);
  }

  // uint64 total_create_order = 18 [json_name = "totalCreateOrder"];
  if (this->total_create_order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(18, this->_internal_total_create_order(), target);
  }

  // uint64 total_orders = 19 [json_name = "totalOrders"];
  if (this->total_orders() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(19, this->_internal_total_orders(), target);
  }

  // uint64 total_trades = 20 [json_name = "totalTrades"];
  if (this->total_trades() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(20, this->_internal_total_trades(), target);
  }

  // uint32 order_subscriptions = 21 [json_name = "orderSubscriptions"];
  if (this->order_subscriptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_order_subscriptions(), target);
  }

  // uint32 trade_subscriptions = 22 [json_name = "tradeSubscriptions"];
  if (this->trade_subscriptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_trade_subscriptions(), target);
  }

  // uint32 candle_subscriptions = 23 [json_name = "candleSubscriptions"];
  if (this->candle_subscriptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(23, this->_internal_candle_subscriptions(), target);
  }

  // uint32 market_depth_subscriptions = 24 [json_name = "marketDepthSubscriptions"];
  if (this->market_depth_subscriptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_market_depth_subscriptions(), target);
  }

  // uint32 positions_subscriptions = 25 [json_name = "positionsSubscriptions"];
  if (this->positions_subscriptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(25, this->_internal_positions_subscriptions(), target);
  }

  // uint32 account_subscriptions = 26 [json_name = "accountSubscriptions"];
  if (this->account_subscriptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_account_subscriptions(), target);
  }

  // uint32 market_data_subscriptions = 27 [json_name = "marketDataSubscriptions"];
  if (this->market_data_subscriptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(27, this->_internal_market_data_subscriptions(), target);
  }

  // string app_version_hash = 28 [json_name = "appVersionHash"];
  if (this->app_version_hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_version_hash().data(), static_cast<int>(this->_internal_app_version_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.Statistics.app_version_hash");
    target = stream->WriteStringMaybeAliased(
        28, this->_internal_app_version_hash(), target);
  }

  // string app_version = 29 [json_name = "appVersion"];
  if (this->app_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_version().data(), static_cast<int>(this->_internal_app_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.Statistics.app_version");
    target = stream->WriteStringMaybeAliased(
        29, this->_internal_app_version(), target);
  }

  // string chain_version = 30 [json_name = "chainVersion"];
  if (this->chain_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chain_version().data(), static_cast<int>(this->_internal_chain_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.Statistics.chain_version");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_chain_version(), target);
  }

  // uint64 block_duration = 31 [json_name = "blockDuration"];
  if (this->block_duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(31, this->_internal_block_duration(), target);
  }

  // string uptime = 32 [json_name = "uptime"];
  if (this->uptime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uptime().data(), static_cast<int>(this->_internal_uptime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.Statistics.uptime");
    target = stream->WriteStringMaybeAliased(
        32, this->_internal_uptime(), target);
  }

  // string chain_id = 33 [json_name = "chainId"];
  if (this->chain_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chain_id().data(), static_cast<int>(this->_internal_chain_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.v1.Statistics.chain_id");
    target = stream->WriteStringMaybeAliased(
        33, this->_internal_chain_id(), target);
  }

  // uint32 market_depth_updates_subscriptions = 34 [json_name = "marketDepthUpdatesSubscriptions"];
  if (this->market_depth_updates_subscriptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(34, this->_internal_market_depth_updates_subscriptions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.Statistics)
  return target;
}

size_t Statistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.Statistics)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string genesis_time = 4 [json_name = "genesisTime"];
  if (this->genesis_time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_genesis_time());
  }

  // string current_time = 5 [json_name = "currentTime"];
  if (this->current_time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_current_time());
  }

  // string vega_time = 6 [json_name = "vegaTime"];
  if (this->vega_time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vega_time());
  }

  // string app_version_hash = 28 [json_name = "appVersionHash"];
  if (this->app_version_hash().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_version_hash());
  }

  // string app_version = 29 [json_name = "appVersion"];
  if (this->app_version().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_version());
  }

  // string chain_version = 30 [json_name = "chainVersion"];
  if (this->chain_version().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chain_version());
  }

  // string uptime = 32 [json_name = "uptime"];
  if (this->uptime().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uptime());
  }

  // string chain_id = 33 [json_name = "chainId"];
  if (this->chain_id().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chain_id());
  }

  // uint64 block_height = 1 [json_name = "blockHeight"];
  if (this->block_height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_block_height());
  }

  // uint64 backlog_length = 2 [json_name = "backlogLength"];
  if (this->backlog_length() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_backlog_length());
  }

  // uint64 total_peers = 3 [json_name = "totalPeers"];
  if (this->total_peers() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_total_peers());
  }

  // uint64 tx_per_block = 8 [json_name = "txPerBlock"];
  if (this->tx_per_block() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_tx_per_block());
  }

  // uint64 average_tx_bytes = 9 [json_name = "averageTxBytes"];
  if (this->average_tx_bytes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_average_tx_bytes());
  }

  // uint64 average_orders_per_block = 10 [json_name = "averageOrdersPerBlock"];
  if (this->average_orders_per_block() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_average_orders_per_block());
  }

  // uint64 trades_per_second = 11 [json_name = "tradesPerSecond"];
  if (this->trades_per_second() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_trades_per_second());
  }

  // uint64 orders_per_second = 12 [json_name = "ordersPerSecond"];
  if (this->orders_per_second() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_orders_per_second());
  }

  // uint64 total_markets = 13 [json_name = "totalMarkets"];
  if (this->total_markets() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_total_markets());
  }

  // .vega.ChainStatus status = 7 [json_name = "status"];
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // uint32 order_subscriptions = 21 [json_name = "orderSubscriptions"];
  if (this->order_subscriptions() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_order_subscriptions());
  }

  // uint64 total_amend_order = 16 [json_name = "totalAmendOrder"];
  if (this->total_amend_order() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_total_amend_order());
  }

  // uint64 total_cancel_order = 17 [json_name = "totalCancelOrder"];
  if (this->total_cancel_order() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_total_cancel_order());
  }

  // uint64 total_create_order = 18 [json_name = "totalCreateOrder"];
  if (this->total_create_order() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_total_create_order());
  }

  // uint64 total_orders = 19 [json_name = "totalOrders"];
  if (this->total_orders() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_total_orders());
  }

  // uint64 total_trades = 20 [json_name = "totalTrades"];
  if (this->total_trades() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_total_trades());
  }

  // uint32 trade_subscriptions = 22 [json_name = "tradeSubscriptions"];
  if (this->trade_subscriptions() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_trade_subscriptions());
  }

  // uint32 candle_subscriptions = 23 [json_name = "candleSubscriptions"];
  if (this->candle_subscriptions() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_candle_subscriptions());
  }

  // uint32 market_depth_subscriptions = 24 [json_name = "marketDepthSubscriptions"];
  if (this->market_depth_subscriptions() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_market_depth_subscriptions());
  }

  // uint32 positions_subscriptions = 25 [json_name = "positionsSubscriptions"];
  if (this->positions_subscriptions() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_positions_subscriptions());
  }

  // uint32 account_subscriptions = 26 [json_name = "accountSubscriptions"];
  if (this->account_subscriptions() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_account_subscriptions());
  }

  // uint32 market_data_subscriptions = 27 [json_name = "marketDataSubscriptions"];
  if (this->market_data_subscriptions() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_market_data_subscriptions());
  }

  // uint64 block_duration = 31 [json_name = "blockDuration"];
  if (this->block_duration() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_block_duration());
  }

  // uint32 market_depth_updates_subscriptions = 34 [json_name = "marketDepthUpdatesSubscriptions"];
  if (this->market_depth_updates_subscriptions() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_market_depth_updates_subscriptions());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Statistics::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.Statistics)
  GOOGLE_DCHECK_NE(&from, this);
  const Statistics* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Statistics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.Statistics)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.Statistics)
    MergeFrom(*source);
  }
}

void Statistics::MergeFrom(const Statistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.Statistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.genesis_time().size() > 0) {
    _internal_set_genesis_time(from._internal_genesis_time());
  }
  if (from.current_time().size() > 0) {
    _internal_set_current_time(from._internal_current_time());
  }
  if (from.vega_time().size() > 0) {
    _internal_set_vega_time(from._internal_vega_time());
  }
  if (from.app_version_hash().size() > 0) {
    _internal_set_app_version_hash(from._internal_app_version_hash());
  }
  if (from.app_version().size() > 0) {
    _internal_set_app_version(from._internal_app_version());
  }
  if (from.chain_version().size() > 0) {
    _internal_set_chain_version(from._internal_chain_version());
  }
  if (from.uptime().size() > 0) {
    _internal_set_uptime(from._internal_uptime());
  }
  if (from.chain_id().size() > 0) {
    _internal_set_chain_id(from._internal_chain_id());
  }
  if (from.block_height() != 0) {
    _internal_set_block_height(from._internal_block_height());
  }
  if (from.backlog_length() != 0) {
    _internal_set_backlog_length(from._internal_backlog_length());
  }
  if (from.total_peers() != 0) {
    _internal_set_total_peers(from._internal_total_peers());
  }
  if (from.tx_per_block() != 0) {
    _internal_set_tx_per_block(from._internal_tx_per_block());
  }
  if (from.average_tx_bytes() != 0) {
    _internal_set_average_tx_bytes(from._internal_average_tx_bytes());
  }
  if (from.average_orders_per_block() != 0) {
    _internal_set_average_orders_per_block(from._internal_average_orders_per_block());
  }
  if (from.trades_per_second() != 0) {
    _internal_set_trades_per_second(from._internal_trades_per_second());
  }
  if (from.orders_per_second() != 0) {
    _internal_set_orders_per_second(from._internal_orders_per_second());
  }
  if (from.total_markets() != 0) {
    _internal_set_total_markets(from._internal_total_markets());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.order_subscriptions() != 0) {
    _internal_set_order_subscriptions(from._internal_order_subscriptions());
  }
  if (from.total_amend_order() != 0) {
    _internal_set_total_amend_order(from._internal_total_amend_order());
  }
  if (from.total_cancel_order() != 0) {
    _internal_set_total_cancel_order(from._internal_total_cancel_order());
  }
  if (from.total_create_order() != 0) {
    _internal_set_total_create_order(from._internal_total_create_order());
  }
  if (from.total_orders() != 0) {
    _internal_set_total_orders(from._internal_total_orders());
  }
  if (from.total_trades() != 0) {
    _internal_set_total_trades(from._internal_total_trades());
  }
  if (from.trade_subscriptions() != 0) {
    _internal_set_trade_subscriptions(from._internal_trade_subscriptions());
  }
  if (from.candle_subscriptions() != 0) {
    _internal_set_candle_subscriptions(from._internal_candle_subscriptions());
  }
  if (from.market_depth_subscriptions() != 0) {
    _internal_set_market_depth_subscriptions(from._internal_market_depth_subscriptions());
  }
  if (from.positions_subscriptions() != 0) {
    _internal_set_positions_subscriptions(from._internal_positions_subscriptions());
  }
  if (from.account_subscriptions() != 0) {
    _internal_set_account_subscriptions(from._internal_account_subscriptions());
  }
  if (from.market_data_subscriptions() != 0) {
    _internal_set_market_data_subscriptions(from._internal_market_data_subscriptions());
  }
  if (from.block_duration() != 0) {
    _internal_set_block_duration(from._internal_block_duration());
  }
  if (from.market_depth_updates_subscriptions() != 0) {
    _internal_set_market_depth_updates_subscriptions(from._internal_market_depth_updates_subscriptions());
  }
}

void Statistics::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.Statistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Statistics::CopyFrom(const Statistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.Statistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Statistics::IsInitialized() const {
  return true;
}

void Statistics::InternalSwap(Statistics* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  genesis_time_.Swap(&other->genesis_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  current_time_.Swap(&other->current_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vega_time_.Swap(&other->vega_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  app_version_hash_.Swap(&other->app_version_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  app_version_.Swap(&other->app_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chain_version_.Swap(&other->chain_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uptime_.Swap(&other->uptime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chain_id_.Swap(&other->chain_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Statistics, market_depth_updates_subscriptions_)
      + sizeof(Statistics::market_depth_updates_subscriptions_)
      - PROTOBUF_FIELD_OFFSET(Statistics, block_height_)>(
          reinterpret_cast<char*>(&block_height_),
          reinterpret_cast<char*>(&other->block_height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Statistics::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LastBlockHeightRequest::_Internal {
 public:
};

LastBlockHeightRequest::LastBlockHeightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.LastBlockHeightRequest)
}
LastBlockHeightRequest::LastBlockHeightRequest(const LastBlockHeightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.v1.LastBlockHeightRequest)
}

void LastBlockHeightRequest::SharedCtor() {
}

LastBlockHeightRequest::~LastBlockHeightRequest() {
  // @@protoc_insertion_point(destructor:api.v1.LastBlockHeightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LastBlockHeightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LastBlockHeightRequest::ArenaDtor(void* object) {
  LastBlockHeightRequest* _this = reinterpret_cast< LastBlockHeightRequest* >(object);
  (void)_this;
}
void LastBlockHeightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LastBlockHeightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LastBlockHeightRequest& LastBlockHeightRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LastBlockHeightRequest_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void LastBlockHeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.LastBlockHeightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LastBlockHeightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LastBlockHeightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.LastBlockHeightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.LastBlockHeightRequest)
  return target;
}

size_t LastBlockHeightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.LastBlockHeightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LastBlockHeightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.LastBlockHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LastBlockHeightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LastBlockHeightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.LastBlockHeightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.LastBlockHeightRequest)
    MergeFrom(*source);
  }
}

void LastBlockHeightRequest::MergeFrom(const LastBlockHeightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.LastBlockHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LastBlockHeightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.LastBlockHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastBlockHeightRequest::CopyFrom(const LastBlockHeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.LastBlockHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LastBlockHeightRequest::IsInitialized() const {
  return true;
}

void LastBlockHeightRequest::InternalSwap(LastBlockHeightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LastBlockHeightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LastBlockHeightResponse::_Internal {
 public:
};

LastBlockHeightResponse::LastBlockHeightResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.LastBlockHeightResponse)
}
LastBlockHeightResponse::LastBlockHeightResponse(const LastBlockHeightResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:api.v1.LastBlockHeightResponse)
}

void LastBlockHeightResponse::SharedCtor() {
  height_ = PROTOBUF_ULONGLONG(0);
}

LastBlockHeightResponse::~LastBlockHeightResponse() {
  // @@protoc_insertion_point(destructor:api.v1.LastBlockHeightResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LastBlockHeightResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LastBlockHeightResponse::ArenaDtor(void* object) {
  LastBlockHeightResponse* _this = reinterpret_cast< LastBlockHeightResponse* >(object);
  (void)_this;
}
void LastBlockHeightResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LastBlockHeightResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LastBlockHeightResponse& LastBlockHeightResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LastBlockHeightResponse_api_2ftrading_2eproto.base);
  return *internal_default_instance();
}


void LastBlockHeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.LastBlockHeightResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  height_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LastBlockHeightResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 height = 1 [json_name = "height"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LastBlockHeightResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.LastBlockHeightResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1 [json_name = "height"];
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.LastBlockHeightResponse)
  return target;
}

size_t LastBlockHeightResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.LastBlockHeightResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 height = 1 [json_name = "height"];
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LastBlockHeightResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.v1.LastBlockHeightResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LastBlockHeightResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LastBlockHeightResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.v1.LastBlockHeightResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.v1.LastBlockHeightResponse)
    MergeFrom(*source);
  }
}

void LastBlockHeightResponse::MergeFrom(const LastBlockHeightResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.v1.LastBlockHeightResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void LastBlockHeightResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.v1.LastBlockHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastBlockHeightResponse::CopyFrom(const LastBlockHeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.LastBlockHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LastBlockHeightResponse::IsInitialized() const {
  return true;
}

void LastBlockHeightResponse::InternalSwap(LastBlockHeightResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(height_, other->height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LastBlockHeightResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::api::v1::PropagateChainEventRequest* Arena::CreateMaybeMessage< ::api::v1::PropagateChainEventRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::PropagateChainEventRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::PropagateChainEventResponse* Arena::CreateMaybeMessage< ::api::v1::PropagateChainEventResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::PropagateChainEventResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::SubmitTransactionV2Request* Arena::CreateMaybeMessage< ::api::v1::SubmitTransactionV2Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::SubmitTransactionV2Request >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::SubmitTransactionV2Response* Arena::CreateMaybeMessage< ::api::v1::SubmitTransactionV2Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::SubmitTransactionV2Response >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::GetVegaTimeRequest* Arena::CreateMaybeMessage< ::api::v1::GetVegaTimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::GetVegaTimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::GetVegaTimeResponse* Arena::CreateMaybeMessage< ::api::v1::GetVegaTimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::GetVegaTimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::ObserveEventBusRequest* Arena::CreateMaybeMessage< ::api::v1::ObserveEventBusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::ObserveEventBusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::ObserveEventBusResponse* Arena::CreateMaybeMessage< ::api::v1::ObserveEventBusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::ObserveEventBusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::StatisticsRequest* Arena::CreateMaybeMessage< ::api::v1::StatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::StatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::StatisticsResponse* Arena::CreateMaybeMessage< ::api::v1::StatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::StatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::Statistics* Arena::CreateMaybeMessage< ::api::v1::Statistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::Statistics >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::LastBlockHeightRequest* Arena::CreateMaybeMessage< ::api::v1::LastBlockHeightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::LastBlockHeightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::api::v1::LastBlockHeightResponse* Arena::CreateMaybeMessage< ::api::v1::LastBlockHeightResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::v1::LastBlockHeightResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
