// source: commands/v1/commands.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var governance_pb = require('../../governance_pb.js');
goog.object.extend(proto, governance_pb);
var vega_pb = require('../../vega_pb.js');
goog.object.extend(proto, vega_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var github_com_mwitkow_go$proto$validators_validator_pb = require('../../github.com/mwitkow/go-proto-validators/validator_pb.js');
goog.object.extend(proto, github_com_mwitkow_go$proto$validators_validator_pb);
goog.exportSymbol('proto.vega.commands.v1.DelegateSubmission', null, global);
goog.exportSymbol('proto.vega.commands.v1.LiquidityProvisionSubmission', null, global);
goog.exportSymbol('proto.vega.commands.v1.OrderAmendment', null, global);
goog.exportSymbol('proto.vega.commands.v1.OrderCancellation', null, global);
goog.exportSymbol('proto.vega.commands.v1.OrderSubmission', null, global);
goog.exportSymbol('proto.vega.commands.v1.ProposalSubmission', null, global);
goog.exportSymbol('proto.vega.commands.v1.RestoreSnapshot', null, global);
goog.exportSymbol('proto.vega.commands.v1.UndelegateSubmission', null, global);
goog.exportSymbol('proto.vega.commands.v1.UndelegateSubmission.Method', null, global);
goog.exportSymbol('proto.vega.commands.v1.VoteSubmission', null, global);
goog.exportSymbol('proto.vega.commands.v1.WithdrawSubmission', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.OrderSubmission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.commands.v1.OrderSubmission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.OrderSubmission.displayName = 'proto.vega.commands.v1.OrderSubmission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.OrderCancellation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.commands.v1.OrderCancellation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.OrderCancellation.displayName = 'proto.vega.commands.v1.OrderCancellation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.OrderAmendment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.commands.v1.OrderAmendment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.OrderAmendment.displayName = 'proto.vega.commands.v1.OrderAmendment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.LiquidityProvisionSubmission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vega.commands.v1.LiquidityProvisionSubmission.repeatedFields_, null);
};
goog.inherits(proto.vega.commands.v1.LiquidityProvisionSubmission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.LiquidityProvisionSubmission.displayName = 'proto.vega.commands.v1.LiquidityProvisionSubmission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.WithdrawSubmission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.commands.v1.WithdrawSubmission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.WithdrawSubmission.displayName = 'proto.vega.commands.v1.WithdrawSubmission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.ProposalSubmission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.commands.v1.ProposalSubmission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.ProposalSubmission.displayName = 'proto.vega.commands.v1.ProposalSubmission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.VoteSubmission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.commands.v1.VoteSubmission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.VoteSubmission.displayName = 'proto.vega.commands.v1.VoteSubmission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.DelegateSubmission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.commands.v1.DelegateSubmission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.DelegateSubmission.displayName = 'proto.vega.commands.v1.DelegateSubmission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.UndelegateSubmission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.commands.v1.UndelegateSubmission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.UndelegateSubmission.displayName = 'proto.vega.commands.v1.UndelegateSubmission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.commands.v1.RestoreSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.commands.v1.RestoreSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.commands.v1.RestoreSnapshot.displayName = 'proto.vega.commands.v1.RestoreSnapshot';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.OrderSubmission.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.OrderSubmission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.OrderSubmission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.OrderSubmission.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: jspb.Message.getFieldWithDefault(msg, 2, 0),
    size: jspb.Message.getFieldWithDefault(msg, 3, 0),
    side: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timeInForce: jspb.Message.getFieldWithDefault(msg, 5, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 6, 0),
    type: jspb.Message.getFieldWithDefault(msg, 7, 0),
    reference: jspb.Message.getFieldWithDefault(msg, 8, ""),
    peggedOrder: (f = msg.getPeggedOrder()) && vega_pb.PeggedOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.OrderSubmission}
 */
proto.vega.commands.v1.OrderSubmission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.OrderSubmission;
  return proto.vega.commands.v1.OrderSubmission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.OrderSubmission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.OrderSubmission}
 */
proto.vega.commands.v1.OrderSubmission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 4:
      var value = /** @type {!proto.vega.Side} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 5:
      var value = /** @type {!proto.vega.Order.TimeInForce} */ (reader.readEnum());
      msg.setTimeInForce(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiresAt(value);
      break;
    case 7:
      var value = /** @type {!proto.vega.Order.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    case 9:
      var value = new vega_pb.PeggedOrder;
      reader.readMessage(value,vega_pb.PeggedOrder.deserializeBinaryFromReader);
      msg.setPeggedOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.OrderSubmission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.OrderSubmission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.OrderSubmission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.OrderSubmission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getTimeInForce();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getReference();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPeggedOrder();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      vega_pb.PeggedOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.vega.commands.v1.OrderSubmission.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
 */
proto.vega.commands.v1.OrderSubmission.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 price = 2;
 * @return {number}
 */
proto.vega.commands.v1.OrderSubmission.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
 */
proto.vega.commands.v1.OrderSubmission.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 size = 3;
 * @return {number}
 */
proto.vega.commands.v1.OrderSubmission.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
 */
proto.vega.commands.v1.OrderSubmission.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional vega.Side side = 4;
 * @return {!proto.vega.Side}
 */
proto.vega.commands.v1.OrderSubmission.prototype.getSide = function() {
  return /** @type {!proto.vega.Side} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.vega.Side} value
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
 */
proto.vega.commands.v1.OrderSubmission.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional vega.Order.TimeInForce time_in_force = 5;
 * @return {!proto.vega.Order.TimeInForce}
 */
proto.vega.commands.v1.OrderSubmission.prototype.getTimeInForce = function() {
  return /** @type {!proto.vega.Order.TimeInForce} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.vega.Order.TimeInForce} value
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
 */
proto.vega.commands.v1.OrderSubmission.prototype.setTimeInForce = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional int64 expires_at = 6;
 * @return {number}
 */
proto.vega.commands.v1.OrderSubmission.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
 */
proto.vega.commands.v1.OrderSubmission.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional vega.Order.Type type = 7;
 * @return {!proto.vega.Order.Type}
 */
proto.vega.commands.v1.OrderSubmission.prototype.getType = function() {
  return /** @type {!proto.vega.Order.Type} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.vega.Order.Type} value
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
 */
proto.vega.commands.v1.OrderSubmission.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string reference = 8;
 * @return {string}
 */
proto.vega.commands.v1.OrderSubmission.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
 */
proto.vega.commands.v1.OrderSubmission.prototype.setReference = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional vega.PeggedOrder pegged_order = 9;
 * @return {?proto.vega.PeggedOrder}
 */
proto.vega.commands.v1.OrderSubmission.prototype.getPeggedOrder = function() {
  return /** @type{?proto.vega.PeggedOrder} */ (
    jspb.Message.getWrapperField(this, vega_pb.PeggedOrder, 9));
};


/**
 * @param {?proto.vega.PeggedOrder|undefined} value
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
*/
proto.vega.commands.v1.OrderSubmission.prototype.setPeggedOrder = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vega.commands.v1.OrderSubmission} returns this
 */
proto.vega.commands.v1.OrderSubmission.prototype.clearPeggedOrder = function() {
  return this.setPeggedOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.commands.v1.OrderSubmission.prototype.hasPeggedOrder = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.OrderCancellation.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.OrderCancellation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.OrderCancellation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.OrderCancellation.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.OrderCancellation}
 */
proto.vega.commands.v1.OrderCancellation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.OrderCancellation;
  return proto.vega.commands.v1.OrderCancellation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.OrderCancellation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.OrderCancellation}
 */
proto.vega.commands.v1.OrderCancellation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.OrderCancellation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.OrderCancellation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.OrderCancellation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.OrderCancellation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.vega.commands.v1.OrderCancellation.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.OrderCancellation} returns this
 */
proto.vega.commands.v1.OrderCancellation.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.vega.commands.v1.OrderCancellation.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.OrderCancellation} returns this
 */
proto.vega.commands.v1.OrderCancellation.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.OrderAmendment.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.OrderAmendment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.OrderAmendment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.OrderAmendment.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: (f = msg.getPrice()) && vega_pb.Price.toObject(includeInstance, f),
    sizeDelta: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expiresAt: (f = msg.getExpiresAt()) && vega_pb.Timestamp.toObject(includeInstance, f),
    timeInForce: jspb.Message.getFieldWithDefault(msg, 6, 0),
    peggedOffset: (f = msg.getPeggedOffset()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    peggedReference: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.OrderAmendment}
 */
proto.vega.commands.v1.OrderAmendment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.OrderAmendment;
  return proto.vega.commands.v1.OrderAmendment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.OrderAmendment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.OrderAmendment}
 */
proto.vega.commands.v1.OrderAmendment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = new vega_pb.Price;
      reader.readMessage(value,vega_pb.Price.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSizeDelta(value);
      break;
    case 5:
      var value = new vega_pb.Timestamp;
      reader.readMessage(value,vega_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 6:
      var value = /** @type {!proto.vega.Order.TimeInForce} */ (reader.readEnum());
      msg.setTimeInForce(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setPeggedOffset(value);
      break;
    case 8:
      var value = /** @type {!proto.vega.PeggedReference} */ (reader.readEnum());
      msg.setPeggedReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.OrderAmendment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.OrderAmendment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.OrderAmendment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.OrderAmendment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      vega_pb.Price.serializeBinaryToWriter
    );
  }
  f = message.getSizeDelta();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      vega_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimeInForce();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getPeggedOffset();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getPeggedReference();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.vega.commands.v1.OrderAmendment.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
 */
proto.vega.commands.v1.OrderAmendment.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.vega.commands.v1.OrderAmendment.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
 */
proto.vega.commands.v1.OrderAmendment.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional vega.Price price = 3;
 * @return {?proto.vega.Price}
 */
proto.vega.commands.v1.OrderAmendment.prototype.getPrice = function() {
  return /** @type{?proto.vega.Price} */ (
    jspb.Message.getWrapperField(this, vega_pb.Price, 3));
};


/**
 * @param {?proto.vega.Price|undefined} value
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
*/
proto.vega.commands.v1.OrderAmendment.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
 */
proto.vega.commands.v1.OrderAmendment.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.commands.v1.OrderAmendment.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 size_delta = 4;
 * @return {number}
 */
proto.vega.commands.v1.OrderAmendment.prototype.getSizeDelta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
 */
proto.vega.commands.v1.OrderAmendment.prototype.setSizeDelta = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional vega.Timestamp expires_at = 5;
 * @return {?proto.vega.Timestamp}
 */
proto.vega.commands.v1.OrderAmendment.prototype.getExpiresAt = function() {
  return /** @type{?proto.vega.Timestamp} */ (
    jspb.Message.getWrapperField(this, vega_pb.Timestamp, 5));
};


/**
 * @param {?proto.vega.Timestamp|undefined} value
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
*/
proto.vega.commands.v1.OrderAmendment.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
 */
proto.vega.commands.v1.OrderAmendment.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.commands.v1.OrderAmendment.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional vega.Order.TimeInForce time_in_force = 6;
 * @return {!proto.vega.Order.TimeInForce}
 */
proto.vega.commands.v1.OrderAmendment.prototype.getTimeInForce = function() {
  return /** @type {!proto.vega.Order.TimeInForce} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.vega.Order.TimeInForce} value
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
 */
proto.vega.commands.v1.OrderAmendment.prototype.setTimeInForce = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional google.protobuf.Int64Value pegged_offset = 7;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.vega.commands.v1.OrderAmendment.prototype.getPeggedOffset = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 7));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
*/
proto.vega.commands.v1.OrderAmendment.prototype.setPeggedOffset = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
 */
proto.vega.commands.v1.OrderAmendment.prototype.clearPeggedOffset = function() {
  return this.setPeggedOffset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.commands.v1.OrderAmendment.prototype.hasPeggedOffset = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional vega.PeggedReference pegged_reference = 8;
 * @return {!proto.vega.PeggedReference}
 */
proto.vega.commands.v1.OrderAmendment.prototype.getPeggedReference = function() {
  return /** @type {!proto.vega.PeggedReference} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.vega.PeggedReference} value
 * @return {!proto.vega.commands.v1.OrderAmendment} returns this
 */
proto.vega.commands.v1.OrderAmendment.prototype.setPeggedReference = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.LiquidityProvisionSubmission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.LiquidityProvisionSubmission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commitmentAmount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fee: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sellsList: jspb.Message.toObjectList(msg.getSellsList(),
    vega_pb.LiquidityOrder.toObject, includeInstance),
    buysList: jspb.Message.toObjectList(msg.getBuysList(),
    vega_pb.LiquidityOrder.toObject, includeInstance),
    reference: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.LiquidityProvisionSubmission;
  return proto.vega.commands.v1.LiquidityProvisionSubmission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.LiquidityProvisionSubmission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCommitmentAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFee(value);
      break;
    case 4:
      var value = new vega_pb.LiquidityOrder;
      reader.readMessage(value,vega_pb.LiquidityOrder.deserializeBinaryFromReader);
      msg.addSells(value);
      break;
    case 5:
      var value = new vega_pb.LiquidityOrder;
      reader.readMessage(value,vega_pb.LiquidityOrder.deserializeBinaryFromReader);
      msg.addBuys(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.LiquidityProvisionSubmission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.LiquidityProvisionSubmission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommitmentAmount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getFee();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSellsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      vega_pb.LiquidityOrder.serializeBinaryToWriter
    );
  }
  f = message.getBuysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      vega_pb.LiquidityOrder.serializeBinaryToWriter
    );
  }
  f = message.getReference();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission} returns this
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 commitment_amount = 2;
 * @return {number}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.getCommitmentAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission} returns this
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.setCommitmentAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string fee = 3;
 * @return {string}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.getFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission} returns this
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.setFee = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated vega.LiquidityOrder sells = 4;
 * @return {!Array<!proto.vega.LiquidityOrder>}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.getSellsList = function() {
  return /** @type{!Array<!proto.vega.LiquidityOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_pb.LiquidityOrder, 4));
};


/**
 * @param {!Array<!proto.vega.LiquidityOrder>} value
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission} returns this
*/
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.setSellsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.vega.LiquidityOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.LiquidityOrder}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.addSells = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.vega.LiquidityOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission} returns this
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.clearSellsList = function() {
  return this.setSellsList([]);
};


/**
 * repeated vega.LiquidityOrder buys = 5;
 * @return {!Array<!proto.vega.LiquidityOrder>}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.getBuysList = function() {
  return /** @type{!Array<!proto.vega.LiquidityOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_pb.LiquidityOrder, 5));
};


/**
 * @param {!Array<!proto.vega.LiquidityOrder>} value
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission} returns this
*/
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.setBuysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.vega.LiquidityOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.LiquidityOrder}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.addBuys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.vega.LiquidityOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission} returns this
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.clearBuysList = function() {
  return this.setBuysList([]);
};


/**
 * optional string reference = 6;
 * @return {string}
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.LiquidityProvisionSubmission} returns this
 */
proto.vega.commands.v1.LiquidityProvisionSubmission.prototype.setReference = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.WithdrawSubmission.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.WithdrawSubmission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.WithdrawSubmission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.WithdrawSubmission.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    asset: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ext: (f = msg.getExt()) && vega_pb.WithdrawExt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.WithdrawSubmission}
 */
proto.vega.commands.v1.WithdrawSubmission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.WithdrawSubmission;
  return proto.vega.commands.v1.WithdrawSubmission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.WithdrawSubmission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.WithdrawSubmission}
 */
proto.vega.commands.v1.WithdrawSubmission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAsset(value);
      break;
    case 3:
      var value = new vega_pb.WithdrawExt;
      reader.readMessage(value,vega_pb.WithdrawExt.deserializeBinaryFromReader);
      msg.setExt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.WithdrawSubmission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.WithdrawSubmission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.WithdrawSubmission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.WithdrawSubmission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAsset();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      vega_pb.WithdrawExt.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 amount = 1;
 * @return {number}
 */
proto.vega.commands.v1.WithdrawSubmission.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.vega.commands.v1.WithdrawSubmission} returns this
 */
proto.vega.commands.v1.WithdrawSubmission.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string asset = 2;
 * @return {string}
 */
proto.vega.commands.v1.WithdrawSubmission.prototype.getAsset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.WithdrawSubmission} returns this
 */
proto.vega.commands.v1.WithdrawSubmission.prototype.setAsset = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional vega.WithdrawExt ext = 3;
 * @return {?proto.vega.WithdrawExt}
 */
proto.vega.commands.v1.WithdrawSubmission.prototype.getExt = function() {
  return /** @type{?proto.vega.WithdrawExt} */ (
    jspb.Message.getWrapperField(this, vega_pb.WithdrawExt, 3));
};


/**
 * @param {?proto.vega.WithdrawExt|undefined} value
 * @return {!proto.vega.commands.v1.WithdrawSubmission} returns this
*/
proto.vega.commands.v1.WithdrawSubmission.prototype.setExt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vega.commands.v1.WithdrawSubmission} returns this
 */
proto.vega.commands.v1.WithdrawSubmission.prototype.clearExt = function() {
  return this.setExt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.commands.v1.WithdrawSubmission.prototype.hasExt = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.ProposalSubmission.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.ProposalSubmission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.ProposalSubmission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.ProposalSubmission.toObject = function(includeInstance, msg) {
  var f, obj = {
    reference: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terms: (f = msg.getTerms()) && governance_pb.ProposalTerms.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.ProposalSubmission}
 */
proto.vega.commands.v1.ProposalSubmission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.ProposalSubmission;
  return proto.vega.commands.v1.ProposalSubmission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.ProposalSubmission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.ProposalSubmission}
 */
proto.vega.commands.v1.ProposalSubmission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    case 2:
      var value = new governance_pb.ProposalTerms;
      reader.readMessage(value,governance_pb.ProposalTerms.deserializeBinaryFromReader);
      msg.setTerms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.ProposalSubmission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.ProposalSubmission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.ProposalSubmission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.ProposalSubmission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReference();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerms();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      governance_pb.ProposalTerms.serializeBinaryToWriter
    );
  }
};


/**
 * optional string reference = 1;
 * @return {string}
 */
proto.vega.commands.v1.ProposalSubmission.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.ProposalSubmission} returns this
 */
proto.vega.commands.v1.ProposalSubmission.prototype.setReference = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional vega.ProposalTerms terms = 2;
 * @return {?proto.vega.ProposalTerms}
 */
proto.vega.commands.v1.ProposalSubmission.prototype.getTerms = function() {
  return /** @type{?proto.vega.ProposalTerms} */ (
    jspb.Message.getWrapperField(this, governance_pb.ProposalTerms, 2));
};


/**
 * @param {?proto.vega.ProposalTerms|undefined} value
 * @return {!proto.vega.commands.v1.ProposalSubmission} returns this
*/
proto.vega.commands.v1.ProposalSubmission.prototype.setTerms = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vega.commands.v1.ProposalSubmission} returns this
 */
proto.vega.commands.v1.ProposalSubmission.prototype.clearTerms = function() {
  return this.setTerms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.commands.v1.ProposalSubmission.prototype.hasTerms = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.VoteSubmission.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.VoteSubmission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.VoteSubmission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.VoteSubmission.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.VoteSubmission}
 */
proto.vega.commands.v1.VoteSubmission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.VoteSubmission;
  return proto.vega.commands.v1.VoteSubmission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.VoteSubmission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.VoteSubmission}
 */
proto.vega.commands.v1.VoteSubmission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposalId(value);
      break;
    case 2:
      var value = /** @type {!proto.vega.Vote.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.VoteSubmission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.VoteSubmission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.VoteSubmission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.VoteSubmission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string proposal_id = 1;
 * @return {string}
 */
proto.vega.commands.v1.VoteSubmission.prototype.getProposalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.VoteSubmission} returns this
 */
proto.vega.commands.v1.VoteSubmission.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional vega.Vote.Value value = 2;
 * @return {!proto.vega.Vote.Value}
 */
proto.vega.commands.v1.VoteSubmission.prototype.getValue = function() {
  return /** @type {!proto.vega.Vote.Value} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.vega.Vote.Value} value
 * @return {!proto.vega.commands.v1.VoteSubmission} returns this
 */
proto.vega.commands.v1.VoteSubmission.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.DelegateSubmission.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.DelegateSubmission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.DelegateSubmission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.DelegateSubmission.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.DelegateSubmission}
 */
proto.vega.commands.v1.DelegateSubmission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.DelegateSubmission;
  return proto.vega.commands.v1.DelegateSubmission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.DelegateSubmission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.DelegateSubmission}
 */
proto.vega.commands.v1.DelegateSubmission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.DelegateSubmission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.DelegateSubmission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.DelegateSubmission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.DelegateSubmission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.vega.commands.v1.DelegateSubmission.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.DelegateSubmission} returns this
 */
proto.vega.commands.v1.DelegateSubmission.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 amount = 2;
 * @return {number}
 */
proto.vega.commands.v1.DelegateSubmission.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vega.commands.v1.DelegateSubmission} returns this
 */
proto.vega.commands.v1.DelegateSubmission.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.UndelegateSubmission.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.UndelegateSubmission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.UndelegateSubmission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.UndelegateSubmission.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    method: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.UndelegateSubmission}
 */
proto.vega.commands.v1.UndelegateSubmission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.UndelegateSubmission;
  return proto.vega.commands.v1.UndelegateSubmission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.UndelegateSubmission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.UndelegateSubmission}
 */
proto.vega.commands.v1.UndelegateSubmission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {!proto.vega.commands.v1.UndelegateSubmission.Method} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.UndelegateSubmission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.UndelegateSubmission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.UndelegateSubmission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.UndelegateSubmission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.vega.commands.v1.UndelegateSubmission.Method = {
  METHOD_UNSPECIFIED: 0,
  METHOD_NOW: 1,
  METHOD_AT_END_OF_EPOCH: 2,
  METHOD_IN_ANGER: 3
};

/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.vega.commands.v1.UndelegateSubmission.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vega.commands.v1.UndelegateSubmission} returns this
 */
proto.vega.commands.v1.UndelegateSubmission.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 amount = 2;
 * @return {number}
 */
proto.vega.commands.v1.UndelegateSubmission.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vega.commands.v1.UndelegateSubmission} returns this
 */
proto.vega.commands.v1.UndelegateSubmission.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Method method = 3;
 * @return {!proto.vega.commands.v1.UndelegateSubmission.Method}
 */
proto.vega.commands.v1.UndelegateSubmission.prototype.getMethod = function() {
  return /** @type {!proto.vega.commands.v1.UndelegateSubmission.Method} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.vega.commands.v1.UndelegateSubmission.Method} value
 * @return {!proto.vega.commands.v1.UndelegateSubmission} returns this
 */
proto.vega.commands.v1.UndelegateSubmission.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.commands.v1.RestoreSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.commands.v1.RestoreSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.commands.v1.RestoreSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.RestoreSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.commands.v1.RestoreSnapshot}
 */
proto.vega.commands.v1.RestoreSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.commands.v1.RestoreSnapshot;
  return proto.vega.commands.v1.RestoreSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.commands.v1.RestoreSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.commands.v1.RestoreSnapshot}
 */
proto.vega.commands.v1.RestoreSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.RestoreSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.commands.v1.RestoreSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.commands.v1.RestoreSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.commands.v1.RestoreSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.vega.commands.v1.RestoreSnapshot.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.vega.commands.v1.RestoreSnapshot.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.vega.commands.v1.RestoreSnapshot.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vega.commands.v1.RestoreSnapshot} returns this
 */
proto.vega.commands.v1.RestoreSnapshot.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


goog.object.extend(exports, proto.vega.commands.v1);
